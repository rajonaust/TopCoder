/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : LongLongNim ( TopCoder - SRM 330 ( Div - 1 ) - 1000 )
    ALGORITHM : Games
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

map <int,int> last ;
vector <int> r ;

class LongLongNim
{
public:
    int numberOfWins (int maxN,vector<int> moves)
    {
        int mask = (1<<22)-1;
        int res = -1 ;
        for(int i=0;i<=maxN;i++)
        {
            mask <<= 1;
            res++;
            for(auto ix:moves)
            {
                if( ( mask & (1<<ix) ) == 0 )
                {
                    mask++;
                    res--;
                    break ;
                }
            }

            if(last[mask]!=0)
            {
                int plength = i - last[mask] ;
                int cnt = (maxN-i)/plength ;
                maxN-=cnt*plength;
                res+=cnt*(res-r[last[mask]]);
            }

            last[mask] = i ;
            r.pb(res);
        }
        return res ;
    }
};
